

<!DOCTYPE html>

2 
<html>

 3   
<head>

 4     
<META
 
http-equiv
=
Content-Type
 
content
=
"text/html; charset=utf-8"
>

 5     
<title>
each-基本循环使用方法 - by 杨元
</title>

 6   
</head>

 7   
<body>

 8     
<h1>
each-基本循环使用方法
</h1>

 9     
<!--基础html框架-->

10     
<table>

11       
<thead>

12         
<tr>

13           
<th>
姓名
</th>

14           
<th>
性别
</th>

15           
<th>
年龄
</th>

16         
</tr>

17       
</thead>

18       
<tbody
 
id
=
"tableList"
>

19        

20       
</tbody>

21     
</table>

22    

23     
<!--插件引用-->

24     
<script
 
type
=
"text/javascript"
 
src
=
"script/jquery.js"
></script>

25     
<script
 
type
=
"text/javascript"
 
src
=
"script/handlebars-1.0.0.beta.6.js"
></script>

26    

27     
<!--Handlebars.js模版-->

28     
<!--Handlebars.js模版放在script标签中，保留了html原有层次结构,模版中要写一些操作语句-->

29     
<!--id可以用来唯一确定一个模版,type是模版固定的写法-->

30     
<script
 
id
=
"table-template"
 
type
=
"text/x-handlebars-template"
>

31
       
{{#
each student
}}

32
         
<
tr
>

33
           
<
td
>{{
name
}}</
td
>

34
           
<
td
>{{
sex
}}</
td
>

35
           
<
td
>{{
age
}}</
td
>

36
         
</
tr
>

37
       
{{/
each
}}

38
     
</script>

39    

40     
<!--进行数据处理、html构造-->

41     
<script
 
type
=
"text/javascript"
>

42
       $
(
document
).
ready
(
function
()
 
{

43
         
//模拟的json对象

44
         
var
 data 
=
 
{

45
                     
"student"
:
 
[

46
                         
{

47
                             
"name"
:
 
"张三"
,       

48
                             
"sex"
:
 
"0"
,

49
                             
"age"
:
 
18

50
                         
},

51
                         
{

52
                             
"name"
:
 
"李四"
,

53
                             
"sex"
:
 
"0"
,

54
                             
"age"
:
 
22

55
                         
},

56
                         
{

57
                             
"name"
:
 
"妞妞"
,

58
                             
"sex"
:
 
"1"
,

59
                             
"age"
:
 
18

60
                         
}

61
                     
]

62
                 
};

63
        

64
         
//注册一个Handlebars模版，通过id找到某一个模版，获取模版的html框架

65
         
//$("#table-template").html()是jquery的语法，不懂的童鞋请恶补。。。

66
         
var
 myTemplate 
=
 
Handlebars
.
compile
(
$
(
"#table-template"
).
html
());

67
        

68
         
//将json对象用刚刚注册的Handlebars模版封装，得到最终的html，插入到基础table中。

69
         $
(
'#tableList'
).
html
(
myTemplate
(
data
));

70
       
});

71
     
</script>

72   
</body>

73 
</html>

 -----------------
this的使用  list
---------------------------------
31
 
      {{#each 
this
}}
32
         
<
tr
>
33
           
<
td
>
{{name}}
<
/
td>
34
           
<
td
>
{{sex}}
<
/
td>
35
           
<
td
>
{{age}}
<
/
td>
36
         
<
/
tr> 
37
 
      {{
/
each}}

        
var
 data 
=
 [

45
 
                        {

46
                             
"
name
"
: 
"
张三
"
,

47
                             
"
sex
"
: 
"
0
"
,

48
                             
"
age
"
: 
18
49
 
                        },

50
 
                        {

51
                             
"
name
"
: 
"
李四
"
,

52
                             
"
sex
"
: 
"
0
"
,

53
                             
"
age
"
: 
22
54
 
                        },

55
 
                        {

56
                             
"
name
"
: 
"
妞妞
"
,

57
                             
"
sex
"
: 
"
1
"
,

58
                             
"
age
"
: 
18
59
 
                        }

60
 
                    ];
----------------- 用../  访问上一层的循环的属性 -------------------------

20
 {{#each 
this
}}

21
 
   {{#each info}}

22
 
          {{..
/
name}}的{{this}}<br> 
 
  
      {{
/
each}}
    
 {{
/
each}}

31
          
var
 data 
=
 [{

32
                       
"
name
"
:
"
张三
"
,

33
                       
"
info
"
:[

34
                         
"
眼睛
"
,

35
                         
"
耳朵
"
,

36
                         
"
鼻子
"
37
 
                      ]

38
 
                    },{

39
                       
"
name
"
:
"
李四
"
,

40
                       
"
info
"
:[

41
                         
"
爸爸
"
,

42
                         
"
妈妈
"
,

43
                         
"
妻子
"
44
 
                      ]

45
 
                 }];
------------------- 索引的使用 ----------------------------

33
 
      {{#each student}}

34
       
<
tr
>
35
         
<
td
>
{{
addOne
 @index}}
<
/
td>                  
  
36
         
<
td
>
{{name}}
<
/
td>
37
         
<
td
>
{{sex}}
<
/
td>
38
         
<
td
>
{{age}}
<
/
td>
39
       
<
/
tr>
40
 
      {{
/
each}}
47
          
var
 data 
=
 {

48
                       
"
student
"
: [

49
 
                          {

50
                               
"
name
"
: 
"
张三
"
,

51
                               
"
sex
"
: 
"
0
"
,

52
                               
"
age
"
: 
18
53
 
                          },

54
 
                          {

55
                               
"
name
"
: 
"
李四
"
,

56
                               
"
sex
"
: 
"
0
"
,

57
                               
"
age
"
: 
22
58
 
                          },

59
 
                          {

60
                               
"
name
"
: 
"
妞妞
"
,

61
                               
"
sex
"
: 
"
1
"
,

62
                               
"
age
"
: 
19
63
 
                          }

64
 
                      ]

65
 
                  };
  71 // 注册一个Handlebars Helper,用来将索引+1，因为默认是从0开始的
72
 
        Handlebars.registerHelper(
"
addOne
"
,
function
(index,options){

73
           
return
 parseInt(index)
+
1
;

74
 
        });
----------------------------
-
with-进入到某个属性(进入到某个上下文环境)
---------------------------
 32
 
      {{#each 
this
}}

 33
         
<
tr
>
 34
           
<
td
>
{{name}}
<
/
td>
 
35
           
<
td
>
{{sex}}
<
/
td>
 
36
           
<
td
>
{{age}}
<
/
td>
 37
           
<
td
>
 
38
 
            {{#
with
 favorite}} 

 39
 
              {{#each 
this
}}               
 this指代的替换
 40
                 
<
p
>
{{name}}
<
/
p>
 41
 
              {{
/
each}}
 
42
 
            {{
/
with}}
 
43
           
<
/
td>
 
44
         
<
/
tr> 
 
45
 
      {{
/
each}}

 52
         
var
 data 
=
 [

 53
 
                        {

 54
                             
"
name
"
: 
"
张三
"
,

 55
                             
"
sex
"
: 
"
0
"
,

 56
                             
"
age
"
: 
18
,

 57
                             
"
favorite
"
:

 58
 
                            [

 59
 
                              {

 60
                                 
"
name
"
:
"
唱歌
"
 61
 
                              },{

 62
                                 
"
name
"
:
"
篮球
"
 63
 
                              }

 64
 
                            ]

 65
 
                        },

 66
 
                        {

 67
                             
"
name
"
: 
"
李四
"
,

 68
                             
"
sex
"
: 
"
0
"
,

 69
                             
"
age
"
: 
22
,

 70
                             
"
favorite
"
:

 71
 
                            [

 72
 
                              {

 73
                                 
"
name
"
:
"
上网
"
 74
 
                              },{

 75
                                 
"
name
"
:
"
足球
"
 76
 
                              }

 77
 
                            ]

 78
 
                        }
 92
 
                    ];
  在循环每名学生时，学生的favorite属性是一个list，我们需要把学生的爱好全部取出来。
     这时候就需要with命令，这个命令可以让当前的上下文进入到一个属性中，{{#with favorite}}表示进入到favorite属性的上下文中，而favorite属性中又是一个list，因此可以用{{#each this}}进行遍历，表示遍历当前上下文环境，对于每次遍历，都是map结构，取name属性，最终拿到所有兴趣爱好。
----------------------------------------

32
 
      {{#each 
this
}}

33
         
<
tr
>
34
           
<
td
>
{{name}}
<
/
td>
35
           
<
td
>
{{sex}}
<
/
td>
36
           
<
td
>
{{age}}
<
/
td>
37
           
<
td
>
38
 
            {{#
with
 favorite}}

39
 
              {{#each 
this
}}

40
                 
<
p
>
{{
this
}}
<
/
p>
41
 
              {{
/
each}}
42
 
            {{
/
with}}
43
           
<
/
td>
44
         
<
/
tr> 
45
 
      {{
/
each}}
52
         
var
 data 
=
 [

53
 
                        {

54
                             
"
name
"
: 
"
张三
"
,

55
                             
"
sex
"
: 
"
0
"
,

56
                             
"
age
"
: 
18
,

57
                             
"
favorite
"
:

58
 
                            [

59
                               
"
唱歌
"
,

60
                               
"
篮球
"
61
 
                            ]

62
 
                        },

63
 
                        {

64
                             
"
name
"
: 
"
李四
"
,

65
                             
"
sex
"
: 
"
0
"
,

66
                             
"
age
"
: 
22
,

67
                             
"
favorite
"
:

68
 
                            [

69
                               
"
上网
"
,

70
                               
"
足球
"
71
 
                            ]

72
 
                        }
83
 
                    ];  -----------------------------------------------------------------

31
 
      {{#each student}}

32
 
        {{#
if
 name}}

33
           
<
tr
>
34
             
<
td
>
{{name}}
<
/
td>
35
             
<
td
>
{{sex}}
<
/
td>
36
             
<
td
>
{{age}}
<
/
td>
37
           
<
/
tr>
38
 
        {{
/
if}}
39
 
      {{
/
each}}
46
         
var
 data 
=
 {

47
                     
"
student
"
: [

48
 
                        {

49
                             
"
name
"
: 
"
张三
"
,

50
                             
"
sex
"
: 
"
0
"
,

51
                             
"
age
"
: 
18
52
 
                        },

53
 
                        {

54
                             
"
sex
"
: 
"
0
"
,       
零是false
55
                             
"
age
"
: 
22
56
 
                        },

57
 
                        {

58
                             
"
name
"
: 
"
妞妞
"
,

59
                             
"
sex
"
: 
"
1
"
,

60
                             
"
age
"
: 
18
61
 
                        }

62
 
                    ]

63
 
                }; ----------------------------------------------------

31
 
      {{#each student}}

32
 
        {{#
if
 name}}

33
 
          {{#compare age 
20
}}             
 
块级别的Helper，有一定的语法结构，调用的时候加#号，就像if那样。
34
             
<
tr
>
35
               
<
td
>
{{name}}
<
/
td>
36
              
 
<
td
>
{{transformat sex}}
<
/
td>
37
               
<
td
>
{{age}}
<
/
td
>
38
             
<
/
tr>
39
 
          {{
else
}}

40
             
<
tr
>
41
               
<
td
>?<
/
td>
42
               
<
td
>?<
/
td>
43
               
<
td
>?<
/
td>
44
             
<
/
tr>
45
 
          {{
/
compare}}
46
 
        {{
/
if}}
47
 
      {{
/
each}}

54
         
var
 data 
=
 {

55
                     
"
student
"
: [

56
 
                        {

57
                             
"
name
"
: 
"
张三
"
,

58
                             
"
sex
"
: 
"
0
"
,

59
                             
"
age
"
: 
23
60
 
                        },

61
 
                        {

62
                             
"
sex
"
: 
"
0
"
,

63
                             
"
age
"
: 
22
64
 
                        },

65
 
                        {

66
                             
"
name
"
: 
"
妞妞
"
,

67
                             
"
sex
"
: 
"
1
"
,

68
                             
"
age
"
: 
18
69
 
                        }

70
 
                    ]

71
 
                };


77
         
//
注册一个比较大小的Helper,判断v1是否大于v2
78
 
      
  Handlebars.registerHelper(
"
compare
"
,
function
(v1,v2,options){

79
           
if
(v1
>
v2){

80
             
//
满足添加继续执行
81
             
return
 options.fn(
this
);

82
 
          }
else
{

83
             
//
不满足条件执行{{else}}部分
84
             
return
 options.inverse(
this
);

85
 
          }

86
 
        });




 89
         
//
注册一个翻译用的Helper，0翻译成男，1翻译成女
 90
 
        Handlebars.registerHelper(
"
transformat
"
,
function
(value){

 91
           
if
(value
==
0
){

 92
             
return
 
"
男
"
;

 93
 
          }
else
 
if
(value
==
1
){

 94
             
return
 
"
女
"
;

 95
 
          }

 96
 
        });
------------------------------------------------------------------